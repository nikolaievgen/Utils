" Отступы пробелами, а не табуляциями
set expandtab
" Ширина строки 80 символов
set textwidth=80
" Ширина табуляции в колонках
set ts=2
" Количество пробелов (колонок) одного отступа
set shiftwidth=2
" Новая строка будет с тем же отступом, что и предыдущая
set autoindent
" Умная расстановка отступов (например, отступ при начале нового блока)
set smartindent
" Подсвечивать синтаксис
syntax on
" Указывать номера строк
set number
" Подсветить максимальную ширину строки
let &colorcolumn=&textwidth
" Цвет линии - тёмно-серый
highlight ColorColumn ctermbg=darkgray
" Игнорировать регистр при поиске                                           
set ic                                                                      
" Подсвечивать поиск                                                        
set hls                                                                     
" Использовать последовательный поиск                                      
set is 
" Включаем bash-подобное дополнение командной строки                        
set wildmode=longest:list,full
" Не делать все окна одинакового размера                                    
set noequalalways                                                          
" Высота окон по-умолчанию 20 строк                                         
set winheight=20
set fileencoding=utf-8
" С/C++ файлы
" Расставлять отступы в стиле С
autocmd filetype c,cpp set cin 
" NERDTree
" Открывать дерево по нажаить Ctrl+n
map <c-n> :NERDTreeToggle<cr>
" Открывать новые окна справа
set splitright
"Clang-completer                                                           
"" Включить дополнительные подсказки (аргументы функций, шаблонов и т.д.)   
let g:clang_snippets=1                                                     
" Использоать ultisnips для дополнительных подскахок (чтобы подсказки шаблов  
" " автогенерации были в выпадающих меню)                                   
let g:clang_snippets_engine = 'ultisnips'                                 
" Периодически проверять проект на ошибки                                
let g:clang_periodic_quickfix=1                                           
" Подсвечивать ошибки                                                    
let g:clang_hl_errors=1
" Автоматически закрывать окно подсказок после выбора подсказки          
let g:clang_close_preview=1                                           
" По нажатию Ctrl+F проверить поект на ошибки                             
map <c-f> :call g:ClangUpdateQuickFix()<cr>
 " path to directory where library can be found
let g:clang_library_path='/usr/lib/llvm-3.8/lib/libclang.so.1'
let NERDTreeShowHidden=1

