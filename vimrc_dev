" Vimrc for dev
"
"

set nocompatible              " be improved, required for Vundle
filetype off                  " required for Vundle
 
" vundle plugin settings
" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'
 
" User defined plugins
"Plugin 'SirVer/ultisnips'                                                    
"Plugin 'honza/vim-snippets'                                                   
"Plugin 'Rip-Rip/clang_complete'


"Plugin 'scrooloose/nerdtree'
"Plugin 'ctrlpvim/ctrlp.vim'
"Plugin 'valloric/youcompleteme'
"Plugin 'vim-airline/vim-airline'
"Plugin 'mattn/emmet-vim'

" All of your Plugins must be added before the following line
call vundle#end()            " required

filetype plugin indent on    " required
" Put your non-Plugin stuff after this line
" Позволим конфигурационным файлам в проекте изменять настройки vim'a
" Включим чтение конфигурационных файлов .vimrc в текущей директории
set exrc                                                                     
" Запретим опасные команды в локальных .vimrc файлах (эта опция должна идти
" в вашем 
" ~/.vimrc после запрещаемых команд, таких как write)
set secure 
" ------------------------------------------------------------------------
" MY Settings
" ------------------------------------------------------------------------
" encodings
set encoding=utf-8
set fileencoding=utf-8
set autoread

" Backspace enable
set backspace=indent,eol,start

" Tab settings
" Отступы пробелами, а не табуляциями
set expandtab
" Ширина строки 80 символов
set textwidth=80
" Ширина табуляции в колонках
set ts=2
" Количество пробелов (колонок) одного отступа
set shiftwidth=2
" Новая строка будет с тем же отступом, что и предыдущая
set autoindent
" Умная расстановка отступов (например, отступ при начале нового блока)
set smartindent
" Change font call dlg
" set guifont=*
" Search settings
set hlsearch
set ignorecase
set smartcase
set incsearch
" Указывать номера строк
set number
" Подсветить максимальную ширину строки
let &colorcolumn=&textwidth
" Цвет линии - тёмно-серый
highlight ColorColumn ctermbg=darkgray
" set colorcolumn=110
" Включаем bash-подобное дополнение командной строки                        
set wildmode=longest:list,full
" Не делать все окна одинакового размера                                    
set noequalalways                                                          
" Высота окон по-умолчанию 20 строк                                         
set winheight=20
" С/C++ файлы
" Расставлять отступы в стиле С
autocmd filetype c,cpp set cin 
" Открывать дерево по нажаить Ctrl+n
" map <c-n> :NERDTreeToggle<cr>
" Открывать новые окна справа
set splitright
" 
" set variables
set showcmd
set cursorline
set showmode
colorscheme desert
syntax on

let g:ctrlp_cmd = 'CtrlPMRU'

" Include files under cursor
" let &path.="r:\Projects\Amigo\1\amigo_browser_38\src\chrome\browser\amigo,"

" in visual mode search selection by type //
"vnoremap <expr> // 'y/\'.escape(@",'\').'<CR>'
vnoremap // y/<C-R>"<CR>

"command -nargs=0 -bar Update 
"	\|	if &modified
"	\|	if empty(bufname('%'))
"	\|		browse confirm write
"	\|	else
"       \|		confirm write
"	\|	endif
"nnoremap <f2>s :<c-u>Update<cr>

" Navigations
" Navig between tabs
nnoremap <f8> :tabn<CR>
nnoremap <s-f8> :tabp<CR>
nnoremap <f2> :NERDTreeToggle<CR>
" Navig between windows
nnoremap <c-h> <c-w>h
nnoremap <c-j> <c-w>j
nnoremap <c-k> <c-w>k
nnoremap <c-l> <c-w>l

" Shift select
nnoremap <s-up> v<up>
nnoremap <s-down> v<down>
nnoremap <s-left> v<left>
nnoremap <s-right> v<right>
vnoremap <s-up> <up>
vnoremap <s-down> <down>
vnoremap <s-left> <left>
vnoremap <s-right> <right>
inoremap <s-up> <esc>v<up>
inoremap <s-down> <esc>v<down>
inoremap <s-left> <esc>v<left>
inoremap <s-right> <esc>v<right>

" Copy, Paste 
"vnoremap <c-c> y<esc>i
"vnoremap <c-x> d<esc>i
" noremap <s-v> pi
" imap <s-v> <esc>pi

" New lines
nmap <S-Enter> O<Esc>
"nmap <CR> o<Esc>

nnoremap <silent> <f5> :exe "resize ".(winheight(0)*3/2)<CR>
nnoremap <silent> <f6> :exe "resize ".(winheight(0)*2/3)<CR>
nnoremap <silent> <s-f5> :exe "vertical resize ".(winwidth(0)*3/2)<CR>
nnoremap <silent> <s-f6> :exe "vertical resize ".(winwidth(0)*2/3)<CR>

" With a map leader it's possible to do extra key combinations
let mapleader = ","
let g:mapleader = ","
"
" Fast saving
nnoremap <leader>w :w!<cr>
nnoremap <leader>wq :wqa!<cr>
nnoremap <leader>qa :qa!<cr>
nnoremap <leader>q :q!<cr>
" 
" Quick vimrc edit
nnoremap <leader>ev :vsplit $MYVIMRC<cr>
nnoremap <leader>sv :so %<cr>
"
" Run, execute current script
nnoremap <leader>r :!%:p<cr>
"
" Line above in insert mode
inoremap <leader>aO <esc>O
inoremap <leader>ao <esc>o
"
" Copy, Cut line
inoremap <leader>cc <esc>yyi
inoremap <leader>cx <esc>ddi
inoremap <leader>cv <esc>Pi
"
" Cursor moves
nnoremap [D B
nnoremap [A <up>
nnoremap [C W
nnoremap [B <down>

" Notes
" executes
" :@" - exec vim code yanked
" :@0 - exec vim code from 0 buffer
" @: - exec last ex command and again @@
" 
" q: | :his - open command line history window
" ctrl-c ctrl-c - close this window (command line)
